scale_color_discrete(name = "",
labels = c("Lake Conroe", "Toledo Bend Reservoir", "Lake Fork", "Lake Sam Rayburn", "Lake Sommerville"))+
theme_void() +
labs(x = "",
y = "")
ggplot() +
geom_polygon(data=tx, aes(x = long, y = lat, fill=region, group=group), color="black", fill="grey50") +
coord_map("gilbert") +
geom_point(data = pop_sites_map, aes(x = as.numeric(Long), y = as.numeric(Lat), color = destination), size = 4) +
geom_point(data = cities, aes(x = as.numeric(long), y = as.numeric(lat)), size = 3, color = "black", shape = 15)+
geom_text(data = cities, aes(x = as.numeric(long), y = as.numeric(lat), label = name))+
scale_color_discrete(name = "",
labels = c("Lake Conroe", "Toledo Bend Reservoir", "Lake Fork", "Lake Sam Rayburn", "Lake Sommerville"))+
theme_void() +
labs(x = "",
y = "")
ggplot() +
geom_polygon(data=tx, aes(x = long, y = lat, fill=region, group=group), color="black", fill="grey50") +
coord_map("gilbert") +
geom_point(data = pop_sites_map, aes(x = as.numeric(Long), y = as.numeric(Lat), color = destination), size = 4) +
geom_point(data = cities, aes(x = as.numeric(long), y = as.numeric(lat)), size = 3, color = "black", shape = 15)+
geom_text(data = cities, aes(x = as.numeric(long), y = as.numeric(lat), label = name), hjust = 0, vjust = 0)+
scale_color_discrete(name = "",
labels = c("Lake Conroe", "Toledo Bend Reservoir", "Lake Fork", "Lake Sam Rayburn", "Lake Sommerville"))+
theme_void() +
labs(x = "",
y = "")
ggplot() +
geom_polygon(data=tx, aes(x = long, y = lat, fill=region, group=group), color="black", fill="grey50") +
coord_map("gilbert") +
geom_point(data = pop_sites_map, aes(x = as.numeric(Long), y = as.numeric(Lat), color = destination), size = 4) +
geom_point(data = cities, aes(x = as.numeric(long), y = as.numeric(lat)), size = 3, color = "black", shape = 15)+
geom_text(data = cities, aes(x = as.numeric(long), y = as.numeric(lat), label = name), hjust = -1, vjust = 0)+
scale_color_discrete(name = "",
labels = c("Lake Conroe", "Toledo Bend Reservoir", "Lake Fork", "Lake Sam Rayburn", "Lake Sommerville"))+
theme_void() +
labs(x = "",
y = "")
ggplot() +
geom_polygon(data=tx, aes(x = long, y = lat, fill=region, group=group), color="black", fill="grey50") +
coord_map("gilbert") +
geom_point(data = pop_sites_map, aes(x = as.numeric(Long), y = as.numeric(Lat), color = destination), size = 4) +
geom_point(data = cities, aes(x = as.numeric(long), y = as.numeric(lat)), size = 3, color = "black", shape = 15)+
geom_text(data = cities, aes(x = as.numeric(long), y = as.numeric(lat), label = name), hjust = -0.1, vjust = 0)+
scale_color_discrete(name = "",
labels = c("Lake Conroe", "Toledo Bend Reservoir", "Lake Fork", "Lake Sam Rayburn", "Lake Sommerville"))+
theme_void() +
labs(x = "",
y = "")
ggplot() +
geom_polygon(data=tx, aes(x = long, y = lat, fill=region, group=group), color="black", fill="grey50") +
coord_map("gilbert") +
geom_point(data = pop_sites_map, aes(x = as.numeric(Long), y = as.numeric(Lat), color = destination), size = 4) +
geom_point(data = cities, aes(x = as.numeric(long), y = as.numeric(lat)), size = 3, color = "black", shape = 15)+
geom_text(data = cities, aes(x = as.numeric(long), y = as.numeric(lat), label = name), hjust = -0.2, vjust = 0)+
scale_color_discrete(name = "",
labels = c("Lake Conroe", "Toledo Bend Reservoir", "Lake Fork", "Lake Sam Rayburn", "Lake Sommerville"))+
theme_void() +
labs(x = "",
y = "")
ggplot() +
geom_polygon(data=tx, aes(x = long, y = lat, fill=region, group=group), color="black", fill="grey50") +
coord_map("gilbert") +
geom_point(data = pop_sites_map, aes(x = as.numeric(Long), y = as.numeric(Lat), color = destination), size = 4) +
geom_point(data = cities, aes(x = as.numeric(long), y = as.numeric(lat)), size = 3, color = "black", shape = 15)+
geom_text(data = cities, aes(x = as.numeric(long), y = as.numeric(lat), label = name), hjust = -0.2, vjust = 1)+
scale_color_discrete(name = "",
labels = c("Lake Conroe", "Toledo Bend Reservoir", "Lake Fork", "Lake Sam Rayburn", "Lake Sommerville"))+
theme_void() +
labs(x = "",
y = "")
ggplot() +
geom_polygon(data=tx, aes(x = long, y = lat, fill=region, group=group), color="black", fill="grey50") +
coord_map("gilbert") +
geom_point(data = pop_sites_map, aes(x = as.numeric(Long), y = as.numeric(Lat), color = destination), size = 4) +
geom_point(data = cities, aes(x = as.numeric(long), y = as.numeric(lat)), size = 3, color = "black", shape = 15)+
geom_text(data = cities, aes(x = as.numeric(long), y = as.numeric(lat), label = name), hjust = -0.2, vjust = -0.1)+
scale_color_discrete(name = "",
labels = c("Lake Conroe", "Toledo Bend Reservoir", "Lake Fork", "Lake Sam Rayburn", "Lake Sommerville"))+
theme_void() +
labs(x = "",
y = "")
ggplot() +
geom_polygon(data=tx, aes(x = long, y = lat, fill=region, group=group), color="black", fill="grey50") +
coord_map("gilbert") +
geom_point(data = pop_sites_map, aes(x = as.numeric(Long), y = as.numeric(Lat), color = destination), size = 4) +
geom_point(data = cities, aes(x = as.numeric(long), y = as.numeric(lat)), size = 3, color = "black", shape = 15)+
geom_text(data = cities, aes(x = as.numeric(long), y = as.numeric(lat), label = name), hjust = -0.2, vjust = -0.2)+
scale_color_discrete(name = "",
labels = c("Lake Conroe", "Toledo Bend Reservoir", "Lake Fork", "Lake Sam Rayburn", "Lake Sommerville"))+
theme_void() +
labs(x = "",
y = "")
ggplot() +
geom_polygon(data=tx, aes(x = long, y = lat, fill=region, group=group), color="black", fill="grey50") +
coord_map("gilbert") +
geom_point(data = pop_sites_map, aes(x = as.numeric(Long), y = as.numeric(Lat), color = destination), size = 4) +
geom_point(data = cities, aes(x = as.numeric(long), y = as.numeric(lat)), size = 3, color = "black", shape = 15)+
geom_text(data = cities, aes(x = as.numeric(long), y = as.numeric(lat), label = name), hjust = -0.2, vjust = -0.3)+
scale_color_discrete(name = "",
labels = c("Lake Conroe", "Toledo Bend Reservoir", "Lake Fork", "Lake Sam Rayburn", "Lake Sommerville"))+
theme_void() +
labs(x = "",
y = "")
ggplot() +
geom_polygon(data=tx, aes(x = long, y = lat, fill=region, group=group), color="black", fill="grey50") +
coord_map("gilbert") +
geom_point(data = pop_sites_map, aes(x = as.numeric(Long), y = as.numeric(Lat), color = destination), size = 4) +
geom_point(data = cities, aes(x = as.numeric(long), y = as.numeric(lat)), size = 3, color = "black", shape = 15)+
geom_text(data = cities, aes(x = as.numeric(long), y = as.numeric(lat), label = name), hjust = -0.2, vjust = -0.5)+
scale_color_discrete(name = "",
labels = c("Lake Conroe", "Toledo Bend Reservoir", "Lake Fork", "Lake Sam Rayburn", "Lake Sommerville"))+
theme_void() +
labs(x = "",
y = "")
ggplot() +
geom_polygon(data=tx, aes(x = long, y = lat, fill=region, group=group), color="black", fill="grey50") +
coord_map("gilbert") +
geom_point(data = pop_sites_map, aes(x = as.numeric(Long), y = as.numeric(Lat), color = destination), size = 4) +
geom_point(data = cities, aes(x = as.numeric(long), y = as.numeric(lat)), size = 3, color = "black", shape = 15)+
geom_text(data = cities, aes(x = as.numeric(long), y = as.numeric(lat), label = name), hjust = 0.2, vjust = -0.5)+
scale_color_discrete(name = "",
labels = c("Lake Conroe", "Toledo Bend Reservoir", "Lake Fork", "Lake Sam Rayburn", "Lake Sommerville"))+
theme_void() +
labs(x = "",
y = "")
ggplot() +
geom_polygon(data=tx, aes(x = long, y = lat, fill=region, group=group), color="black", fill="grey50") +
coord_map("gilbert") +
geom_point(data = pop_sites_map, aes(x = as.numeric(Long), y = as.numeric(Lat), color = destination), size = 4) +
geom_point(data = cities, aes(x = as.numeric(long), y = as.numeric(lat)), size = 3, color = "black", shape = 15)+
geom_text(data = cities, aes(x = as.numeric(long), y = as.numeric(lat), label = name), hjust = 2, vjust = -0.5)+
scale_color_discrete(name = "",
labels = c("Lake Conroe", "Toledo Bend Reservoir", "Lake Fork", "Lake Sam Rayburn", "Lake Sommerville"))+
theme_void() +
labs(x = "",
y = "")
ggplot() +
geom_polygon(data=tx, aes(x = long, y = lat, fill=region, group=group), color="black", fill="grey50") +
coord_map("gilbert") +
geom_point(data = pop_sites_map, aes(x = as.numeric(Long), y = as.numeric(Lat), color = destination), size = 4) +
geom_point(data = cities, aes(x = as.numeric(long), y = as.numeric(lat)), size = 3, color = "black", shape = 15)+
geom_text(data = cities, aes(x = as.numeric(long), y = as.numeric(lat), label = name), hjust = 1, vjust = -0.5)+
scale_color_discrete(name = "",
labels = c("Lake Conroe", "Toledo Bend Reservoir", "Lake Fork", "Lake Sam Rayburn", "Lake Sommerville"))+
theme_void() +
labs(x = "",
y = "")
pop.map <- ggplot() +
geom_polygon(data=tx, aes(x = long, y = lat, fill=region, group=group), color="black", fill="grey50") +
coord_map("gilbert") +
geom_point(data = pop_sites_map, aes(x = as.numeric(Long), y = as.numeric(Lat), color = destination), size = 4) +
geom_point(data = cities, aes(x = as.numeric(long), y = as.numeric(lat)), size = 3, color = "black", shape = 15)+
geom_text(data = cities, aes(x = as.numeric(long), y = as.numeric(lat), label = name), hjust = 1, vjust = -0.5)+
scale_color_discrete(name = "",
labels = c("Lake Conroe", "Toledo Bend Reservoir", "Lake Fork", "Lake Sam Rayburn", "Lake Sommerville"))+
theme_void() +
labs(x = "",
y = "")
ggsave("/Volumes/GoogleDrive/My Drive/Research/RecDemandWQ/Analysis/Output/pop_map.png", pop.map)
install.packages("radix")
install.packages("rticles")
install.packages("datasets")
?datasets
?LakeHuron
install.packages('mlogit')
library(mlogit)
data(Car)
View(Car)
View(Car)
mlogit.Car <- mlogit.data(Car,
choice = 'choice',
shape = 'wide',
varying = 5:70,
alt.levels = 1:6,
sep="")
View(mlogit.Car)
View(mlogit.Car)
model <- mlogit(choice ~ type + fuel + price | college,
data = mlogit.Car)
# Look at the results
summary(model)
?mlogit
system("say -v Fred Hello Pulkit you sexy bastard")
system("say -v Fred Hello Pulkit you sexy bastard")
#R code for analyzing data for the U.S. from the COVID Tracking Project: https://covidtracking.com
# Install and load packages
pacman::p_load(dplyr, tidyr, ggplot2)
#R code for analyzing data for the U.S. from the COVID Tracking Project: https://covidtracking.com
# Install and load packages
pacman::p_load(dplyr, tidyr, ggplot2)
setwd("/Users/michaelblack/Documents/COVID-tracking")
#R code for analyzing data for the U.S. from the COVID Tracking Project: https://covidtracking.com
# Install and load packages
pacman::p_load(dplyr, tidyr, ggplot2)
setwd("/Users/michaelblack/Documents/COVID-tracking")
data <- read.csv("https://covidtracking.com/api/v1/states/daily.csv")
View(data)
View(data)
#R code for analyzing data for the U.S. from the COVID Tracking Project: https://covidtracking.com
# Install and load packages
pacman::p_load(dplyr, tidyr, ggplot2)
setwd("/Users/michaelblack/Documents/COVID-tracking")
data <- read.csv("https://covidtracking.com/api/v1/states/daily.csv")
tx <- data %>%
filter(state == "TX")
View(tx)
View(tx)
#R code for analyzing data for the U.S. from the COVID Tracking Project: https://covidtracking.com
# Install and load packages
pacman::p_load(dplyr, tidyr, ggplot2)
setwd("/Users/michaelblack/Documents/COVID-tracking")
data <- read.csv("https://covidtracking.com/api/v1/states/daily.csv")
tx <- data %>%
filter(state == "TX")
ggplot(tx, aes(date, positiveincrease))+
geom_point()
#R code for analyzing data for the U.S. from the COVID Tracking Project: https://covidtracking.com
# Install and load packages
pacman::p_load(dplyr, tidyr, ggplot2)
setwd("/Users/michaelblack/Documents/COVID-tracking")
data <- read.csv("https://covidtracking.com/api/v1/states/daily.csv")
tx <- data %>%
filter(state == "TX")
ggplot(tx, aes(date, positiveIncrease))+
geom_point()
#R code for analyzing data for the U.S. from the COVID Tracking Project: https://covidtracking.com
# Install and load packages
pacman::p_load(dplyr, tidyr, ggplot2)
setwd("/Users/michaelblack/Documents/COVID-tracking")
data <- read.csv("https://covidtracking.com/api/v1/states/daily.csv")
data$strdates <- as.character(data$date)
#R code for analyzing data for the U.S. from the COVID Tracking Project: https://covidtracking.com
# Install and load packages
pacman::p_load(dplyr, tidyr, ggplot2)
setwd("/Users/michaelblack/Documents/COVID-tracking")
data <- read.csv("https://covidtracking.com/api/v1/states/daily.csv")
data <- data %>%
mutate(date = as.Date(as.character(date), "%Y%m%d"))
#R code for analyzing data for the U.S. from the COVID Tracking Project: https://covidtracking.com
# Install and load packages
pacman::p_load(dplyr, tidyr, ggplot2)
setwd("/Users/michaelblack/Documents/COVID-tracking")
data <- read.csv("https://covidtracking.com/api/v1/states/daily.csv")
data <- data %>%
mutate(date = as.Date(as.character(date), "%Y%m%d"))
tx <- data %>%
filter(state == "TX")
ggplot(tx, aes(date, positiveIncrease))+
geom_point()
#R code for analyzing data for the U.S. from the COVID Tracking Project: https://covidtracking.com
# Install and load packages
pacman::p_load(dplyr, tidyr, ggplot2)
setwd("/Users/michaelblack/Documents/COVID-tracking")
data <- read.csv("https://covidtracking.com/api/v1/states/daily.csv")
data <- data %>%
mutate(date = as.Date(as.character(date), "%Y%m%d"))
tx <- data %>%
filter(state == "TX")
ggplot(tx, aes(date, positiveIncrease))+
geom_point() +
geom_smooth(
)
#R code for analyzing data for the U.S. from the COVID Tracking Project: https://covidtracking.com
# Install and load packages
pacman::p_load(dplyr, tidyr, ggplot2)
setwd("/Users/michaelblack/Documents/COVID-tracking")
data <- read.csv("https://covidtracking.com/api/v1/states/daily.csv")
data <- data %>%
mutate(date = as.Date(as.character(date), "%Y%m%d"))
tx <- data %>%
filter(state == "TX")
ggplot(tx, aes(date, positiveIncrease))+
geom_point() +
geom_smooth() +
theme_minimal()
#R code for analyzing data for the U.S. from the COVID Tracking Project: https://covidtracking.com
# Install and load packages
pacman::p_load(dplyr, tidyr, ggplot2)
setwd("/Users/michaelblack/Documents/COVID-tracking")
data <- read.csv("https://covidtracking.com/api/v1/states/daily.csv")
data <- data %>%
mutate(date = as.Date(as.character(date), "%Y%m%d"))
tx <- data %>%
filter(state == "TX")
ggplot(tx, aes(date, positiveIncrease))+
geom_point() +
geom_smooth() +
theme_classic()
#R code for analyzing data for the U.S. from the COVID Tracking Project: https://covidtracking.com
# Install and load packages
pacman::p_load(dplyr, tidyr, ggplot2)
setwd("/Users/michaelblack/Documents/COVID-tracking")
data <- read.csv("https://covidtracking.com/api/v1/states/daily.csv")
data <- data %>%
mutate(date = as.Date(as.character(date), "%Y%m%d"))
tx <- data %>%
filter(state == "TX")
ggplot(tx, aes(date, positiveIncrease))+
geom_point() +
geom_smooth() +
theme_classic() +
labs(title = "New Infections in Texas, Daily", x = "Date", y = "New Infections")
#R code for analyzing data for the U.S. from the COVID Tracking Project: https://covidtracking.com
# Install and load packages
pacman::p_load(dplyr, tidyr, ggplot2)
setwd("/Users/michaelblack/Documents/COVID-tracking")
data <- read.csv("https://covidtracking.com/api/v1/states/daily.csv")
data <- data %>%
mutate(date = as.Date(as.character(date), "%Y%m%d"))
tx <- data %>%
filter(state == "TX")
tx_plot <- ggplot(tx, aes(date, positiveIncrease))+
geom_point() +
geom_smooth() +
theme_classic() +
labs(title = "New Infections in Texas, Daily", x = "Date", y = "New Infections")
ar <- data %>%
filter(state == "AR")
ar_plot <- ggplot(ar, aes(date, positiveIncrease))+
geom_point() +
geom_smooth() +
theme_classic() +
labs(title = "New Infections in Arkansas, Daily", x = "Date", y = "New Infections")
ct <- data %>%
filter(state == "CT")
ct_plot <- ggplot(ct, aes(date, positiveIncrease))+
geom_point() +
geom_smooth() +
theme_classic() +
labs(title = "New Infections in Connecticut, Daily", x = "Date", y = "New Infections")
ny <- data %>%
filter(state == "NY")
ny_plot <- ggplot(ny, aes(date, positiveIncrease))+
geom_point() +
geom_smooth() +
theme_classic() +
labs(title = "New Infections in New York, Daily", x = "Date", y = "New Infections")
grid.arrange(tx_plot, ar_plot, ct_plot, ny_plot)
#R code for analyzing data for the U.S. from the COVID Tracking Project: https://covidtracking.com
# Install and load packages
pacman::p_load(dplyr, tidyr, ggplot2, gridExtra)
#R code for analyzing data for the U.S. from the COVID Tracking Project: https://covidtracking.com
# Install and load packages
pacman::p_load(dplyr, tidyr, ggplot2, gridExtra)
setwd("/Users/michaelblack/Documents/COVID-tracking")
data <- read.csv("https://covidtracking.com/api/v1/states/daily.csv")
data <- data %>%
mutate(date = as.Date(as.character(date), "%Y%m%d"))
tx <- data %>%
filter(state == "TX")
tx_plot <- ggplot(tx, aes(date, positiveIncrease))+
geom_point() +
geom_smooth() +
theme_classic() +
labs(title = "New Infections in Texas, Daily", x = "Date", y = "New Infections")
ar <- data %>%
filter(state == "AR")
ar_plot <- ggplot(ar, aes(date, positiveIncrease))+
geom_point() +
geom_smooth() +
theme_classic() +
labs(title = "New Infections in Arkansas, Daily", x = "Date", y = "New Infections")
ct <- data %>%
filter(state == "CT")
ct_plot <- ggplot(ct, aes(date, positiveIncrease))+
geom_point() +
geom_smooth() +
theme_classic() +
labs(title = "New Infections in Connecticut, Daily", x = "Date", y = "New Infections")
ny <- data %>%
filter(state == "NY")
ny_plot <- ggplot(ny, aes(date, positiveIncrease))+
geom_point() +
geom_smooth() +
theme_classic() +
labs(title = "New Infections in New York, Daily", x = "Date", y = "New Infections")
grid.arrange(tx_plot, ar_plot, ct_plot, ny_plot)
#R code for analyzing data for the U.S. from the COVID Tracking Project: https://covidtracking.com
# Install and load packages
pacman::p_load(dplyr, tidyr, ggplot2, gridExtra)
setwd("/Users/michaelblack/Documents/COVID-tracking")
data <- read.csv("https://covidtracking.com/api/v1/states/daily.csv")
data <- data %>%
mutate(date = as.Date(as.character(date), "%Y%m%d"))
tx <- data %>%
filter(state == "TX")
tx_plot <- ggplot(tx, aes(date, positiveIncrease))+
geom_point() +
geom_smooth() +
theme_classic() +
labs(title = "New Infections in Texas, Daily", x = "Date", y = "New Infections")
ar <- data %>%
filter(state == "AR")
ar_plot <- ggplot(ar, aes(date, positiveIncrease))+
geom_point() +
geom_smooth() +
theme_classic() +
labs(title = "New Infections in Arkansas, Daily", x = "Date", y = "New Infections")
ct <- data %>%
filter(state == "CT")
ct_plot <- ggplot(ct, aes(date, positiveIncrease))+
geom_point() +
geom_smooth() +
theme_classic() +
labs(title = "New Infections in Connecticut, Daily", x = "Date", y = "New Infections")
ny <- data %>%
filter(state == "NY")
ny_plot <- ggplot(ny, aes(date, positiveIncrease))+
geom_point() +
geom_smooth() +
theme_classic() +
labs(title = "New Infections in New York, Daily", x = "Date", y = "New Infections")
final<- grid.arrange(tx_plot, ar_plot, ct_plot, ny_plot)
ggsave(final.png, plot = final)
#R code for analyzing data for the U.S. from the COVID Tracking Project: https://covidtracking.com
# Install and load packages
pacman::p_load(dplyr, tidyr, ggplot2, gridExtra)
setwd("/Users/michaelblack/Documents/COVID-tracking")
data <- read.csv("https://covidtracking.com/api/v1/states/daily.csv")
data <- data %>%
mutate(date = as.Date(as.character(date), "%Y%m%d"))
tx <- data %>%
filter(state == "TX")
tx_plot <- ggplot(tx, aes(date, positiveIncrease))+
geom_point() +
geom_smooth() +
theme_classic() +
labs(title = "New Infections in Texas, Daily", x = "Date", y = "New Infections")
ar <- data %>%
filter(state == "AR")
ar_plot <- ggplot(ar, aes(date, positiveIncrease))+
geom_point() +
geom_smooth() +
theme_classic() +
labs(title = "New Infections in Arkansas, Daily", x = "Date", y = "New Infections")
ct <- data %>%
filter(state == "CT")
ct_plot <- ggplot(ct, aes(date, positiveIncrease))+
geom_point() +
geom_smooth() +
theme_classic() +
labs(title = "New Infections in Connecticut, Daily", x = "Date", y = "New Infections")
ny <- data %>%
filter(state == "NY")
ny_plot <- ggplot(ny, aes(date, positiveIncrease))+
geom_point() +
geom_smooth() +
theme_classic() +
labs(title = "New Infections in New York, Daily", x = "Date", y = "New Infections")
final<- grid.arrange(tx_plot, ar_plot, ct_plot, ny_plot)
ggsave("final.png", plot = final)
#R code for analyzing data for the U.S. from the COVID Tracking Project: https://covidtracking.com
# Install and load packages
pacman::p_load(dplyr, tidyr, ggplot2, gridExtra, lubridate)
setwd("/Users/michaelblack/Documents/COVID-tracking")
data <- read.csv("https://covidtracking.com/api/v1/states/daily.csv")
data <- data %>%
mutate(date = as.Date(as.character(date), "%Y%m%d"))
txpre <- data %>%
filter(state == "TX",
date <= "2020-04-30")
txpos <- data %>%
filter(state == "TX",
date >= "2020-05-01")
tx_plot <- ggplot() +
geom_point(aes(date, positiveIncrease), data = txpre)+
geom_smooth(aes(date, positiveIncrease), data = txpre) +
geom_vline(xintercept = as.numeric(ymd("2020-04-30")), color = "red") +
geom_point(aes(date, positiveIncrease), data = txpos)+
#geom_smooth(aes(date, positiveIncrease), data = txpre) +
theme_classic() +
labs(title = "New Infections in Texas, Daily", x = "Date", y = "New Infections")
ar <- data %>%
filter(state == "AR")
ar_plot <- ggplot(ar, aes(date, positiveIncrease))+
geom_point() +
geom_smooth() +
theme_classic() +
labs(title = "New Infections in Arkansas, Daily", x = "Date", y = "New Infections")
ct <- data %>%
filter(state == "CT")
ct_plot <- ggplot(ct, aes(date, positiveIncrease))+
geom_point() +
geom_smooth() +
theme_classic() +
labs(title = "New Infections in Connecticut, Daily", x = "Date", y = "New Infections")
ny <- data %>%
filter(state == "NY")
ny_plot <- ggplot(ny, aes(date, positiveIncrease))+
geom_point() +
geom_smooth() +
theme_classic() +
labs(title = "New Infections in New York, Daily", x = "Date", y = "New Infections")
final<- grid.arrange(tx_plot, ar_plot, ct_plot, ny_plot)
ggsave("final.png", plot = final)
ggplot() +
geom_point(aes(date, positiveIncrease), data = txpre)+
geom_smooth(aes(date, positiveIncrease), data = txpre) +
geom_vline(xintercept = as.numeric(ymd("2020-04-30")), color = "red") +
geom_point(aes(date, positiveIncrease), data = txpos)+
#geom_smooth(aes(date, positiveIncrease), data = txpre) +
theme_classic() +
labs(title = "New Infections in Texas, Daily", x = "Date", y = "New Infections")
ggplot() +
geom_point(aes(date, positiveIncrease), data = txpre)+
geom_smooth(aes(date, positiveIncrease), data = txpre) +
geom_vline(xintercept = as.numeric(ymd("2020-04-30")), color = "red") +
geom_point(aes(date, positiveIncrease), data = txpos)+
geom_smooth(aes(date, positiveIncrease), data = txpre) +
theme_classic() +
labs(title = "New Infections in Texas, Daily", x = "Date", y = "New Infections")
