geom_vline(xintercept = as.numeric(ymd("2020-04-30")), color = "red") +
geom_point(aes(date, positiveIncrease), data = txpos)+
geom_smooth(aes(date, positiveIncrease), data = txpos, method = "loess") +
theme_classic() +
labs(title = "New Infections in Texas, Daily", x = "Date", y = "New Infections")
ggplot() +
geom_point(aes(date, positiveIncrease), data = txpre)+
geom_smooth(aes(date, positiveIncrease), data = txpre) +
geom_vline(xintercept = as.numeric(ymd("2020-04-30")), color = "red") +
geom_point(aes(date, positiveIncrease), data = txpos)+
geom_smooth(aes(date, positiveIncrease), data = txpos, method = "glm") +
theme_classic() +
labs(title = "New Infections in Texas, Daily", x = "Date", y = "New Infections")
ggplot() +
geom_point(aes(date, positiveIncrease), data = txpre)+
geom_smooth(aes(date, positiveIncrease), data = txpre) +
geom_vline(xintercept = as.numeric(ymd("2020-04-30")), color = "red") +
geom_point(aes(date, positiveIncrease), data = txpos)+
geom_smooth(aes(date, positiveIncrease), data = txpos, method = "gam") +
theme_classic() +
labs(title = "New Infections in Texas, Daily", x = "Date", y = "New Infections")
ggplot() +
geom_point(aes(date, positiveIncrease), data = txpre)+
geom_smooth(aes(date, positiveIncrease), data = txpre) +
geom_vline(xintercept = as.numeric(ymd_hms("2020-04-30 12:00:00")), color = "red") +
geom_point(aes(date, positiveIncrease), data = txpos)+
geom_smooth(aes(date, positiveIncrease), data = txpos, method = "gam") +
theme_classic() +
labs(title = "New Infections in Texas, Daily", x = "Date", y = "New Infections")
ggplot() +
geom_point(aes(date, positiveIncrease), data = txpre)+
geom_smooth(aes(date, positiveIncrease), data = txpre) +
geom_vline(xintercept = as.numeric(ymd_hms("2020-04-30 12:00:00")), color = "red") +
geom_point(aes(date, positiveIncrease), data = txpos)+
#geom_smooth(aes(date, positiveIncrease), data = txpos) +
theme_classic() +
labs(title = "New Infections in Texas, Daily", x = "Date", y = "New Infections")
ggplot() +
geom_point(aes(date, positiveIncrease), data = txpre)+
geom_smooth(aes(date, positiveIncrease), data = txpre) +
geom_vline(xintercept = as.numeric(ymd("2020-04-30")), color = "red") +
geom_point(aes(date, positiveIncrease), data = txpos)+
#geom_smooth(aes(date, positiveIncrease), data = txpos) +
theme_classic() +
labs(title = "New Infections in Texas, Daily", x = "Date", y = "New Infections")
txpre2 <- data %>%
filter(state == "TX",
date <= "2020-04-30",
date >= "2020-04-26")
txpos2 <- data %>%
filter(state == "TX",
date >= "2020-05-01")
ggplot() +
geom_point(aes(date, positiveIncrease), data = txpre2)+
geom_smooth(aes(date, positiveIncrease), data = txpre2, method = "glm")
ggplot() +
geom_point(aes(date, positiveIncrease), data = txpre2)+
geom_smooth(aes(date, positiveIncrease), data = txpre2, method = "glm") +
geom_vline(xintercept = as.numeric(ymd("2020-04-30")), color = "red") +
geom_point(aes(date, positiveIncrease), data = txpos2)+
geom_smooth(aes(date, positiveIncrease), data = txpos2, method = "glm") +
theme_classic() +
labs(title = "New Infections in Texas, Daily", x = "Date", y = "New Infections")
ggplot() +
geom_point(aes(date, positiveIncrease), data = txpre2)+
geom_smooth(aes(date, positiveIncrease), data = txpre2, method = "gam") +
geom_vline(xintercept = as.numeric(ymd("2020-04-30")), color = "red") +
geom_point(aes(date, positiveIncrease), data = txpos2)+
geom_smooth(aes(date, positiveIncrease), data = txpos2, method = "gam") +
theme_classic() +
labs(title = "New Infections in Texas, Daily", x = "Date", y = "New Infections")
txpre2 <- data %>%
filter(state == "TX",
date <= "2020-04-30",
date >= "2020-04-16")
txpos2 <- data %>%
filter(state == "TX",
date >= "2020-05-01")
ggplot() +
geom_point(aes(date, positiveIncrease), data = txpre2)+
geom_smooth(aes(date, positiveIncrease), data = txpre2, method = "gam") +
geom_vline(xintercept = as.numeric(ymd("2020-04-30")), color = "red") +
geom_point(aes(date, positiveIncrease), data = txpos2)+
geom_smooth(aes(date, positiveIncrease), data = txpos2, method = "gam") +
theme_classic() +
labs(title = "New Infections in Texas, Daily", x = "Date", y = "New Infections")
gapre2 <- data %>%
filter(state == "GA",
date <= "2020-04-23",
date >= "2020-04-10")
gapos2 <- data %>%
filter(state == "GA",
date >= "2020-04-24")
ggplot() +
geom_point(aes(date, positiveIncrease), data = gapre2)+
geom_smooth(aes(date, positiveIncrease), data = gapre2, method = "gam") +
geom_vline(xintercept = as.numeric(ymd("2020-04-24")), color = "red") +
geom_point(aes(date, positiveIncrease), data = gapos2)+
geom_smooth(aes(date, positiveIncrease), data = gapos2, method = "gam") +
theme_classic() +
labs(title = "New Infections in Georgia, Daily", x = "Date", y = "New Infections")
txpre2 <- data %>%
filter(state == "TX",
date <= "2020-04-30",
date >= "2020-04-16")
txpos2 <- data %>%
filter(state == "TX",
date >= "2020-05-01")
ggplot() +
geom_point(aes(date, positiveIncrease), data = txpre2)+
geom_smooth(aes(date, positiveIncrease), data = txpre2, method = "gam") +
geom_vline(xintercept = as.numeric(ymd("2020-04-30")), color = "red") +
geom_point(aes(date, positiveIncrease), data = txpos2)+
geom_smooth(aes(date, positiveIncrease), data = txpos2, method = "gam") +
theme_classic() +
labs(title = "New Infections in Texas, Daily", x = "Date", y = "New Infections")
pacman::p_load(dplyr, tidyr, ggplot2, gridExtra, lubridate, EpiDynamics)
#R code for analyzing data for the U.S. from the COVID Tracking Project: https://covidtracking.com
# Install and load packages
pacman::p_load(dplyr, tidyr, ggplot2, gridExtra, lubridate, EpiDynamics)
# Parameters and initial conditions.
parameters <- c(beta = 1.4247, gamma = 0.14286)
initials <- c(S = 1 - 1e-06, I = 1e-06, R = 1 - (1 - 1e-06 - 1e-06))
# Solve and plot.
sir <- SIR(pars = parameters, init = initials, time = 0:70) PlotMods(sir)
parameters <- c(beta = 1.4247, gamma = 0.14286)
initials <- c(S = 1 - 1e-06, I = 1e-06, R = 1 - (1 - 1e-06 - 1e-06))
sir <- SIR(pars = parameters, init = initials, time = 0:70)
PlotMods(sir)
#R code for analyzing data for the U.S. from the COVID Tracking Project: https://covidtracking.com
# Install and load packages
pacman::p_load(dplyr, tidyr, ggplot2, gridExtra, lubridate, EpiDynamics)
# Parameters and initial conditions.
parameters <- c(mu = 1 / (70 * 365), beta = 520 / 365,
sigma = 1 / 14, gamma = 1 / 7)
initials <- c(S = 0.1, E = 1e-04, I = 1e-04, R = 1 - 0.1 - 1e-4 - 1e-4)
# Solve and plot.
seir <- SEIR(pars = parameters, init = initials, time = 0:(60 * 365))
PlotMods(seir)
Plot(seir)
plot(seir)
View(seir)
View(seir)
seir <- seir$results
View(seir)
View(seir)
ggplot(data = seir, aes(x = time, y = I))+
geom_point()
ggplot(data = seir, aes(x = time, y = R))+
geom_point()
# Parameters and initial conditions.
parameters <- c(beta = 1.4247, gamma = 0.14286)
initials <- c(S = 1 - 1e-06, I = 1e-06, R = 1 - (1 - 1e-06 - 1e-06))
# Solve and plot.
sir <- SIR(pars = parameters, init = initials, time = 0:70)
sir <- sir$results
View(sir)
View(sir)
ggplot(data = sir, aes(x = time, y = I))+
geom_point()
ggplot(data = sir, aes(x = time, y = I))+
geom_line()
#R code for analyzing data for the U.S. from the COVID Tracking Project: https://covidtracking.com
# Install and load packages
pacman::p_load(dplyr, tidyr, ggplot2, gridExtra, lubridate, EpiDynamics)
# Parameters and initial conditions.
parameters <- c(beta = 1.9, gamma = 0.14286)
initials <- c(S = 1 - 1e-06, I = 1e-06, R = 1 - (1 - 1e-06 - 1e-06))
# Solve and plot.
sir <- SIR(pars = parameters, init = initials, time = 0:70)
sir <- sir$results
ggplot(data = sir, aes(x = time, y = I))+
geom_line()
#R code for analyzing data for the U.S. from the COVID Tracking Project: https://covidtracking.com
# Install and load packages
pacman::p_load(dplyr, tidyr, ggplot2, gridExtra, lubridate, EpiDynamics)
# Parameters and initial conditions.
parameters <- c(beta = 1.5, gamma = 0.97)
initials <- c(S = 1 - 1e-06, I = 1e-06, R = 1 - (1 - 1e-06 - 1e-06))
# Solve and plot.
sir <- SIR(pars = parameters, init = initials, time = 0:70)
sir <- sir$results
ggplot(data = sir, aes(x = time, y = I))+
geom_line()
#R code for analyzing data for the U.S. from the COVID Tracking Project: https://covidtracking.com
# Install and load packages
pacman::p_load(dplyr, tidyr, ggplot2, gridExtra, lubridate, EpiDynamics)
# Parameters and initial conditions.
parameters <- c(beta = 1, gamma = 0.97)
initials <- c(S = 1 - 1e-06, I = 1e-06, R = 1 - (1 - 1e-06 - 1e-06))
# Solve and plot.
sir <- SIR(pars = parameters, init = initials, time = 0:70)
sir <- sir$results
ggplot(data = sir, aes(x = time, y = I))+
geom_line()
#R code for analyzing data for the U.S. from the COVID Tracking Project: https://covidtracking.com
# Install and load packages
pacman::p_load(dplyr, tidyr, ggplot2, gridExtra, lubridate, EpiDynamics)
# Parameters and initial conditions.
parameters <- c(beta = 1.01, gamma = 0.97)
initials <- c(S = 1 - 1e-06, I = 1e-06, R = 1 - (1 - 1e-06 - 1e-06))
# Solve and plot.
sir <- SIR(pars = parameters, init = initials, time = 0:70)
sir <- sir$results
ggplot(data = sir, aes(x = time, y = I))+
geom_line()
#R code for analyzing data for the U.S. from the COVID Tracking Project: https://covidtracking.com
# Install and load packages
pacman::p_load(dplyr, tidyr, ggplot2, gridExtra, lubridate, EpiDynamics)
# Parameters and initial conditions.
parameters <- c(beta = 1.3, gamma = 0.97)
initials <- c(S = 1 - 1e-06, I = 1e-06, R = 1 - (1 - 1e-06 - 1e-06))
# Solve and plot.
sir <- SIR(pars = parameters, init = initials, time = 0:70)
sir <- sir$results
ggplot(data = sir, aes(x = time, y = I))+
geom_line()
#R code for analyzing data for the U.S. from the COVID Tracking Project: https://covidtracking.com
# Install and load packages
pacman::p_load(dplyr, tidyr, ggplot2, gridExtra, lubridate, EpiDynamics)
# Parameters and initial conditions.
parameters <- c(beta = 1.4, gamma = 0.97)
initials <- c(S = 1 - 1e-06, I = 1e-06, R = 1 - (1 - 1e-06 - 1e-06))
# Solve and plot.
sir <- SIR(pars = parameters, init = initials, time = 0:70)
sir <- sir$results
ggplot(data = sir, aes(x = time, y = I))+
geom_line()
#R code for analyzing data for the U.S. from the COVID Tracking Project: https://covidtracking.com
# Install and load packages
pacman::p_load(dplyr, tidyr, ggplot2, gridExtra, lubridate, EpiDynamics)
# Parameters and initial conditions.
parameters <- c(beta = 1.2, gamma = 0.97)
initials <- c(S = 1 - 1e-06, I = 1e-06, R = 1 - (1 - 1e-06 - 1e-06))
# Solve and plot.
sir <- SIR(pars = parameters, init = initials, time = 0:70)
sir <- sir$results
ggplot(data = sir, aes(x = time, y = I))+
geom_line()
#R code for analyzing data for the U.S. from the COVID Tracking Project: https://covidtracking.com
# Install and load packages
pacman::p_load(dplyr, tidyr, ggplot2, gridExtra, lubridate, EpiDynamics)
# Parameters and initial conditions.
parameters <- c(beta = 1.2, gamma = 0.80)
initials <- c(S = 1 - 1e-06, I = 1e-06, R = 1 - (1 - 1e-06 - 1e-06))
# Solve and plot.
sir <- SIR(pars = parameters, init = initials, time = 0:70)
sir <- sir$results
ggplot(data = sir, aes(x = time, y = I))+
geom_line()
#R code for analyzing data for the U.S. from the COVID Tracking Project: https://covidtracking.com
# Install and load packages
pacman::p_load(dplyr, tidyr, ggplot2, gridExtra, lubridate)
setwd("/Users/michaelblack/Documents/COVID-tracking")
data <- read.csv("https://covidtracking.com/api/v1/states/daily.csv")
data <- data %>%
mutate(date = as.Date(as.character(date), "%Y%m%d"))
tx <- data %>%
filter(state=="TX")
View(tx)
View(tx)
plot(lm(positiveIncrease ~ date, data = tx))
plot(lm(positiveIncrease ~ date, data = tx), which = 1)
plot(lm(positiveIncrease ~ date, data = tx), which = 2)
?plot
plot(tx$date, tx$positiveIncrease)
plot(predict(lm(positiveIncrease ~ date, data = tx)))
predict(lm(positiveIncrease ~ date, data = tx))
predict(lm(positiveIncrease ~ poly(date, 10), data = tx))
#R code for analyzing data for the U.S. from the COVID Tracking Project: https://covidtracking.com
# Install and load packages
pacman::p_load(dplyr, tidyr, ggplot2, gridExtra, lubridate)
setwd("/Users/michaelblack/Documents/COVID-tracking")
data <- read.csv("https://covidtracking.com/api/v1/states/daily.csv")
data <- data %>%
mutate(date = as.Date(as.character(date), "%Y%m%d")) %>%
arrange(date)
#R code for analyzing data for the U.S. from the COVID Tracking Project: https://covidtracking.com
# Install and load packages
pacman::p_load(dplyr, tidyr, ggplot2, gridExtra, lubridate)
setwd("/Users/michaelblack/Documents/COVID-tracking")
data <- read.csv("https://covidtracking.com/api/v1/states/daily.csv")
data <- data %>%
mutate(date = as.Date(as.character(date), "%Y%m%d")) %>%
arrange(desc(date))
#R code for analyzing data for the U.S. from the COVID Tracking Project: https://covidtracking.com
# Install and load packages
pacman::p_load(dplyr, tidyr, ggplot2, gridExtra, lubridate)
setwd("/Users/michaelblack/Documents/COVID-tracking")
data <- read.csv("https://covidtracking.com/api/v1/states/daily.csv")
data <- data %>%
mutate(date = as.Date(as.character(date), "%Y%m%d"))
tx <- data %>%
filter(state=="TX") %>%
arrange(desc(date))
#R code for analyzing data for the U.S. from the COVID Tracking Project: https://covidtracking.com
# Install and load packages
pacman::p_load(dplyr, tidyr, ggplot2, gridExtra, lubridate)
setwd("/Users/michaelblack/Documents/COVID-tracking")
data <- read.csv("https://covidtracking.com/api/v1/states/daily.csv")
data <- data %>%
mutate(date = as.Date(as.character(date), "%Y%m%d"))
tx <- data %>%
filter(state=="TX") %>%
arrange(date)
predict(lm(positiveIncrease ~ poly(date, 10), data = tx))
pred <- predict(lm(positiveIncrease ~ poly(date, 10), data = tx))
pred <- as.data.frame(pred)
View(pred)
View(pred)
pred$id <- 1:nrow(pred)
txpre2 <- data %>%
filter(state == "TX",
date <= "2020-04-30",
date >= "2020-04-16")
txpos2 <- data %>%
filter(state == "TX",
date >= "2020-05-01")
ggplot() +
geom_point(aes(date, positiveIncrease), data = txpre2)+
geom_smooth(aes(date, positiveIncrease), data = txpre2, method = "gam") +
geom_vline(xintercept = as.numeric(ymd("2020-04-30")), color = "red") +
geom_point(aes(date, positiveIncrease), data = txpos2)+
geom_smooth(aes(date, positiveIncrease), data = txpos2, method = "gam") +
theme_classic() +
labs(title = "New Infections in Texas, Daily", x = "Date", y = "New Infections")
gapre2 <- data %>%
filter(state == "GA",
date <= "2020-04-23",
date >= "2020-04-10")
gapos2 <- data %>%
filter(state == "GA",
date >= "2020-04-24")
ggplot() +
geom_point(aes(date, positiveIncrease), data = gapre2)+
geom_smooth(aes(date, positiveIncrease), data = gapre2, method = "gam") +
geom_vline(xintercept = as.numeric(ymd("2020-04-24")), color = "red") +
geom_point(aes(date, positiveIncrease), data = gapos2)+
geom_smooth(aes(date, positiveIncrease), data = gapos2, method = "gam") +
theme_classic() +
labs(title = "New Infections in Georgia, Daily", x = "Date", y = "New Infections")
txpre2 <- data %>%
filter(state == "TX",
date <= "2020-04-30",
date >= "2020-04-16")
txpos2 <- data %>%
filter(state == "TX",
date >= "2020-05-01")
ggplot() +
geom_point(aes(date, positiveIncrease), data = txpre2)+
geom_smooth(aes(date, positiveIncrease), data = txpre2, method = "gam") +
geom_vline(xintercept = as.numeric(ymd("2020-04-30")), color = "red") +
geom_point(aes(date, positiveIncrease), data = txpos2)+
geom_smooth(aes(date, positiveIncrease), data = txpos2, method = "gam") +
theme_classic() +
labs(title = "New Infections in Texas, Daily", x = "Date", y = "New Infections")
#R code for analyzing data for the U.S. from the COVID Tracking Project: https://covidtracking.com
# Install and load packages
pacman::p_load(dplyr, tidyr, ggplot2, gridExtra, lubridate, rdd, forecast)
setwd("/Users/michaelblack/Documents/COVID-tracking")
data <- read.csv("https://covidtracking.com/api/v1/states/daily.csv")
data <- data %>%
mutate(date = as.Date(as.character(date), "%Y%m%d"))
tx <- data %>%
filter(state == "TX") %>%
select(infinc = "positiveIncrease", date) %>%
arrange(date)
txts <- ts(tx$infinc, start = as.Date("2020-03-04"), frequency = 7)
autoArimaFit <- auto.arima(txts)
plot(forecast(autoArimaFit, h=30))
#R code for analyzing data for the U.S. from the COVID Tracking Project: https://covidtracking.com
# Install and load packages
pacman::p_load(dplyr, tidyr, ggplot2, gridExtra, lubridate)
setwd("/Users/michaelblack/Documents/COVID-tracking")
data <- read.csv("https://covidtracking.com/api/v1/states/daily.csv")
data <- data %>%
mutate(date = as.Date(as.character(date), "%Y%m%d"))
txpre <- data %>%
filter(state == "TX",
date <= "2020-04-30")
txpos <- data %>%
filter(state == "TX",
date >= "2020-05-01")
tx_plot <- ggplot() +
geom_point(aes(date, positiveIncrease), data = txpre)+
geom_smooth(aes(date, positiveIncrease), data = txpre) +
geom_vline(xintercept = as.numeric(ymd("2020-04-30")), color = "red") +
geom_point(aes(date, positiveIncrease), data = txpos)+
#geom_smooth(aes(date, positiveIncrease), data = txpos) +
theme_classic() +
labs(title = "New Infections in Texas, Daily", x = "Date", y = "New Infections")
ar <- data %>%
filter(state == "AR")
ar_plot <- ggplot(ar, aes(date, positiveIncrease))+
geom_point() +
geom_smooth() +
theme_classic() +
labs(title = "New Infections in Arkansas, Daily", x = "Date", y = "New Infections")
ct <- data %>%
filter(state == "CT")
ct_plot <- ggplot(ct, aes(date, positiveIncrease))+
geom_point() +
geom_smooth() +
theme_classic() +
labs(title = "New Infections in Connecticut, Daily", x = "Date", y = "New Infections")
ny <- data %>%
filter(state == "NY")
ny_plot <- ggplot(ny, aes(date, positiveIncrease))+
geom_point() +
geom_smooth() +
theme_classic() +
labs(title = "New Infections in New York, Daily", x = "Date", y = "New Infections")
final<- grid.arrange(tx_plot, ar_plot, ct_plot, ny_plot)
ggsave("final.png", plot = final)
#### Local Difference in Infection Rates for re-opened economies
txpre2 <- data %>%
filter(state == "TX",
date <= "2020-04-30",
date >= "2020-04-16")
txpos2 <- data %>%
filter(state == "TX",
date >= "2020-05-01")
ggplot() +
geom_point(aes(date, positiveIncrease), data = txpre2)+
geom_smooth(aes(date, positiveIncrease), data = txpre2, method = "gam") +
geom_vline(xintercept = as.numeric(ymd("2020-04-30")), color = "red") +
geom_point(aes(date, positiveIncrease), data = txpos2)+
geom_smooth(aes(date, positiveIncrease), data = txpos2, method = "gam") +
theme_classic() +
labs(title = "New Infections in Texas, Daily", x = "Date", y = "New Infections")
gapre2 <- data %>%
filter(state == "GA",
date <= "2020-04-23",
date >= "2020-04-10")
gapos2 <- data %>%
filter(state == "GA",
date >= "2020-04-24")
ggplot() +
geom_point(aes(date, positiveIncrease), data = gapre2)+
geom_smooth(aes(date, positiveIncrease), data = gapre2, method = "gam") +
geom_vline(xintercept = as.numeric(ymd("2020-04-24")), color = "red") +
geom_point(aes(date, positiveIncrease), data = gapos2)+
geom_smooth(aes(date, positiveIncrease), data = gapos2, method = "gam") +
theme_classic() +
labs(title = "New Infections in Georgia, Daily", x = "Date", y = "New Infections")
ggplot() +
geom_point(aes(date, positiveIncrease), data = txpre2)+
geom_smooth(aes(date, positiveIncrease), data = txpre2, method = "gam") +
geom_vline(xintercept = as.numeric(ymd("2020-04-30")), color = "red") +
geom_point(aes(date, positiveIncrease), data = txpos2)+
geom_smooth(aes(date, positiveIncrease), data = txpos2, method = "gam") +
theme_classic() +
labs(title = "New Infections in Texas, Daily", x = "Date", y = "New Infections")
#R code for analyzing data for the U.S. from the COVID Tracking Project: https://covidtracking.com
# Install and load packages
pacman::p_load(dplyr, tidyr, ggplot2, gridExtra, lubridate)
setwd("/Users/michaelblack/Documents/COVID-tracking")
data <- read.csv("https://covidtracking.com/api/v1/states/daily.csv")
data <- data %>%
mutate(date = as.Date(as.character(date), "%Y%m%d"))
txpre <- data %>%
filter(state == "TX",
date <= "2020-04-30")
txpos <- data %>%
filter(state == "TX",
date >= "2020-05-01")
tx_plot <- ggplot() +
geom_point(aes(date, positiveIncrease), data = txpre)+
geom_smooth(aes(date, positiveIncrease), data = txpre) +
geom_vline(xintercept = as.numeric(ymd("2020-04-30")), color = "red") +
geom_point(aes(date, positiveIncrease), data = txpos)+
#geom_smooth(aes(date, positiveIncrease), data = txpos) +
theme_classic() +
labs(title = "New Infections in Texas, Daily", x = "Date", y = "New Infections")
ar <- data %>%
filter(state == "AR")
ar_plot <- ggplot(ar, aes(date, positiveIncrease))+
geom_point() +
geom_smooth() +
theme_classic() +
labs(title = "New Infections in Arkansas, Daily", x = "Date", y = "New Infections")
ct <- data %>%
filter(state == "CT")
ct_plot <- ggplot(ct, aes(date, positiveIncrease))+
geom_point() +
geom_smooth() +
theme_classic() +
labs(title = "New Infections in Connecticut, Daily", x = "Date", y = "New Infections")
ny <- data %>%
filter(state == "NY")
ny_plot <- ggplot(ny, aes(date, positiveIncrease))+
geom_point() +
geom_smooth() +
theme_classic() +
labs(title = "New Infections in New York, Daily", x = "Date", y = "New Infections")
final<- grid.arrange(tx_plot, ar_plot, ct_plot, ny_plot)
ggsave("final.png", plot = final)
txpre2 <- data %>%
filter(state == "TX",
date <= "2020-04-30",
date >= "2020-04-16")
txpos2 <- data %>%
filter(state == "TX",
date >= "2020-05-01")
ggplot() +
geom_point(aes(date, positiveIncrease), data = txpre2)+
geom_smooth(aes(date, positiveIncrease), data = txpre2, method = "gam") +
geom_vline(xintercept = as.numeric(ymd("2020-04-30")), color = "red") +
geom_point(aes(date, positiveIncrease), data = txpos2)+
geom_smooth(aes(date, positiveIncrease), data = txpos2, method = "gam") +
theme_classic() +
labs(title = "New Infections in Texas, Daily", x = "Date", y = "New Infections")
